# vim: syn=sh

set -u
set -o pipefail

HDNEWS_EDITOR_ADD=${HDNEWS_EDITOR_ADD:=_vim_add}
XDG_DATA_HOME=${XDG_DATA_HOME:=${HOME}/.local/share}
APP_DIR=${APP_DIR:=${XDG_DATA_HOME}/hdnews}
# GIT_WORK_TREE: see man git(1)
export GIT_WORK_TREE="${GIT_WORK_TREE:=${APP_DIR}/git}"
# GIT_DIR: see man git(1)
export GIT_DIR="${GIT_WORK_TREE}/.git"
GIT_README="${GIT_WORK_TREE}/README"

NEWS_DIR="news"
LAST_ID_FILE="${NEWS_DIR}/.last_id"

FQ_NEWS_DIR="${GIT_WORK_TREE}/${NEWS_DIR}"
FQ_LAST_ID_FILE="${GIT_WORK_TREE}/${NEWS_DIR}/.last_id"

function _git_init() {
    test -d ${GIT_WORK_TREE}/.git && return
    git init ${GIT_WORK_TREE}
}

function _git_init_readme() {
    local README=${GIT_WORK_TREE}/README

    echo "hdnews database" > ${README} || return
    echo "https://github.com/yaccz/hdnews" >> ${README} || return

    git add README || return
    git commit -m "Add README"
}

function _git_init_news() {
    mkdir -p $(dirname ${FQ_LAST_ID_FILE})
    test -f ${FQ_LAST_ID_FILE} && return

    write_id 0
    git add ${LAST_ID_FILE}
    git commit -m "Init last_id"
}

function git_init() {
    mkdir -p ${GIT_WORK_TREE}

    if test -f ${FQ_LAST_ID_FILE} ; then
        echo "${GIT_WORK_TREE} already initialized"
        return 1
    fi

    _git_init           || return
    _git_init_readme    || return
    _git_init_news      || return
}

function new_id {
    local last=$(< ${FQ_LAST_ID_FILE}) || return
    echo $(( last + 1 ))
    git add ${LAST_ID_FILE}
}

function write_id {
    local new=$1
    printf "%d" ${new} > ${FQ_LAST_ID_FILE}
}

function _vim_add {
    # Record Path
    local rp="${1}"

    vim "${rp}/description.rst" "${rp}/source" \
        -c ":3split" \
        -c ":b source" \
        -c ":wincmd w"
}

function cli_init {
    git_init
}

function cli_add {
    # this needs a lock
    if [[ $(git status -su | wc -l) -gt 0 ]]; then
        echo "Aborting - commit already in progress"
        git status -su
        return 1
    fi

    local new=$(new_id) || return
    local rp=${NEWS_DIR}/${new} # record path
    local fqrp=${FQ_NEWS_DIR}/${new} # record path

    mkdir ${fqrp}                   || return
    xsel >> "${fqrp}/source"        || return
    ${HDNEWS_EDITOR_ADD} ${fqrp}    || return

    if [[ "$(< ${fqrp}/source)" == "" ]]; then
        echo "Aborting - no source" >&2
        return 1
    fi

    write_id ${new}               || return
    git add ${rp} ${LAST_ID_FILE} || return
    git commit ${rp} ${LAST_ID_FILE} -m "Add news ${new}"
}

function cli_git {
    git "$@"
}
